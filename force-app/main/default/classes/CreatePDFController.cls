global without sharing class CreatePDFController {
    public String zaWashAddress {get;set;}public String currentCurrency {get;set;}public String term {get;set;}public String footer {get;set;}public String customer {get;set;}public String QuoteName {get;set;}public String QuoteDate {get;set;}public String AET {get;set;}public String tax {get;set;}public Decimal vat {get;set;}public Decimal totalQuoteAmount {get;set;}public String htmlString {get;set;}public String totalDiscount {get;set;}public String dateOf{get;set;}public String description{get;set;}public String quantity{get;set;}public String unitPrice{get;set;}public String taxes{get;set;}public String totalPrice{get;set;}public String amountExcludingTax{get;set;}public String discount{get;set;}
    public void CreatePDFController( ) {
        Id QuoteId = Id.valueOf(Apexpages.currentpage().getparameters().get('quoteId'));Schema.SObjectType zaWash_Quote = Schema.zaWash_Quote__c.getSObjectType();Schema.SObjectType record = QuoteId.getsobjecttype();
 If(record == zaWash_Quote) { zaWash_Quote__c quoteRecord = [Select Name, Work_Type__r.Country__c, Ex_VAT_Price__c, Total_Quote_Price__c, Customer_Type__c, Currency__c, Discount__c, Allow_discount_by_Amount__c from zaWash_Quote__c where Id =: QuoteId]; currentCurrency = quoteRecord.Currency__c; term = ' quote : '; QuoteName = quoteRecord.name; totalQuoteAmount = quoteRecord.Total_Quote_Price__c; if (quoteRecord.Work_Type__r.Country__c == 'USA') { dateOf = 'Date of'; description = 'Description'; quantity = 'Quantity'; unitPrice = 'Unit Price'; taxes = 'Taxes'; totalPrice = 'Total Price'; amountExcludingTax = 'Amount excluding tax'; discount = 'Discount'; } else if (quoteRecord.Work_Type__r.Country__c == 'Switzerland') { dateOf = 'Date de'; description = 'Description'; quantity = 'Quantité'; unitPrice = 'Prix unitaire'; taxes = 'TVA'; totalPrice = 'Prix total'; amountExcludingTax = 'Montant HTVA'; discount = 'Rabais'; } else if (quoteRecord.Work_Type__r.Country__c == 'Germany') { dateOf = 'Datum von'; description = 'Beschreibung'; quantity = 'Menge'; unitPrice = 'Einzelpreis'; taxes = 'Steuern'; totalPrice = 'Gesamtpreis'; amountExcludingTax = 'Betrag ohne MwSt'; discount = 'Rabatt'; } if (quoteRecord.Allow_discount_by_Amount__c == true) { totalDiscount = string.valueof(quoteRecord.Discount__c); totalQuoteAmount = totalQuoteAmount; if (totalQuoteAmount < 0) { totalQuoteAmount = 0.00; } } else { totalDiscount = '0.00'; } vat = quoteRecord.Total_Quote_Price__c - Decimal.valueOf(Apexpages.currentpage().getparameters().get('Amount')); if (quoteRecord.Ex_VAT_Price__c == true) { tax = '0.0%'; } else { if (quoteRecord.Currency__c == 'CHF') { tax = '7.7%'; } else { tax = '20%'; } } if (quoteRecord.Allow_discount_by_Amount__c == true) { String newStr = tax.substring(0, tax.length() - 1); vat = (quoteRecord.Total_Quote_Price__c * (decimal.valueof(newStr) / 100)).setScale(2); } if (quoteRecord.Currency__c == 'EUR') { footer = 'Hello@zawash.fr, SIRET 90354829500018, TVA FR73903548295'; } else { footer = 'info@zawash.ch'; } } else { serviceappointment quoteRecord = [select SAautonumber__c, Discount_Allowed__c, Discount_Amount__c, AppointmentNumber, Currency__c, street, Include_VAT__c, Account.name, account.email__C, WorkType.Country__c, WorkType.name, WorkType.Price__c, ParentRecordId, odooInvoiceName__c, Total_Price__c from ServiceAppointment where Id =: QuoteId]; if (quoteRecord.WorkType.Country__c == 'USA') { dateOf = 'Date of'; description = 'Description'; quantity = 'Quantity'; unitPrice = 'Unit Price'; taxes = 'Taxes'; totalPrice = 'Total Price'; amountExcludingTax = 'Amount excluding tax'; discount = 'Discount'; } else if (quoteRecord.WorkType.Country__c == 'Switzerland') { dateOf = 'Date de'; description = 'Description'; quantity = 'Quantité'; unitPrice = 'Prix unitaire'; taxes = 'TVA'; totalPrice = 'Prix total'; amountExcludingTax = 'Montant HTVA'; discount = 'Rabais'; } else if (quoteRecord.WorkType.Country__c == 'Germany') { dateOf = 'Datum von'; description = 'Beschreibung'; quantity = 'Menge'; unitPrice = 'Einzelpreis'; taxes = 'Steuern'; totalPrice = 'Gesamtpreis'; amountExcludingTax = 'Betrag ohne Steuern'; discount = 'Rabatt'; } currentCurrency = quoteRecord.Currency__c; if (quoteRecord.Include_VAT__c == false) { tax = '0.0%'; } else { if (quoteRecord.Currency__c == 'CHF') { tax = '7.7%'; } else { tax = '20%'; } } if (Apexpages.currentpage().getparameters().get('pdfType') == 'Invoice') { if (quoteRecord.WorkType.Country__c == 'USA') { term = ' Invoice: '; QuoteName = 'SA: ' + quoteRecord.SAautonumber__c + ' / Invoice: ' + quoteRecord.odooInvoiceName__c; } else if (quoteRecord.WorkType.Country__c == 'Switzerland') { term = ' facturation: '; QuoteName = 'SA: ' + quoteRecord.SAautonumber__c + ' / facturation: ' + quoteRecord.odooInvoiceName__c; } else if (quoteRecord.WorkType.Country__c == 'Germany') { term = ' Rechnung: '; QuoteName = 'SA: ' + quoteRecord.SAautonumber__c + ' / Rechnung: ' + quoteRecord.odooInvoiceName__c; } totalQuoteAmount = quoteRecord.Total_Price__c; if (quoteRecord.Discount_Allowed__c == true) { totalDiscount = quoteRecord.Discount_Amount__c; totalQuoteAmount = totalQuoteAmount - Decimal.valueOf(quoteRecord.Discount_Amount__c); if (totalQuoteAmount < 0) { totalQuoteAmount = 0.00; } } else { totalDiscount = '0.00'; } vat = quoteRecord.Total_Price__c - Decimal.valueOf(Apexpages.currentpage().getparameters().get('Amount')); } else { if (Apexpages.currentpage().getparameters().get('pdfType') == 'Refund') { if (quoteRecord.WorkType.Country__c == 'USA') { term = ' Credit note:'; QuoteName = 'SA: ' + quoteRecord.SAautonumber__c + ' / Invoice: ' + quoteRecord.odooInvoiceName__c + ' / Credit note: ' + Apexpages.currentpage().getparameters().get('creditNote'); } else if (quoteRecord.WorkType.Country__c == 'Switzerland') { term = ' Note de crédit: '; QuoteName = 'SA: ' + quoteRecord.SAautonumber__c + ' / facturation: ' + quoteRecord.odooInvoiceName__c + ' / Note de crédit: ' + Apexpages.currentpage().getparameters().get('creditNote'); } else if (quoteRecord.WorkType.Country__c == 'Germany') { term = ' Gutschrift: '; QuoteName = 'SA: ' + quoteRecord.SAautonumber__c + ' / Rechnung: ' + quoteRecord.odooInvoiceName__c + ' / Gutschrift: ' + Apexpages.currentpage().getparameters().get('creditNote'); } } else { if (quoteRecord.WorkType.Country__c == 'USA') { term = ' Credit note: '; QuoteName = 'Credit note '; } else if (quoteRecord.WorkType.Country__c == 'Switzerland') { term = ' Note de crédit: '; QuoteName = 'Note de crédit '; } else if (quoteRecord.WorkType.Country__c == 'Germany') { term = ' Gutschrift: '; QuoteName = 'Gutschrift '; } } totalQuoteAmount = (Decimal.valueOf(Apexpages.currentpage().getparameters().get('Amount')) + (Decimal.valueOf(Apexpages.currentpage().getparameters().get('Amount')) * decimal.valueOf(tax.split('%')[0]) / 100)).setScale(2); if (quoteRecord.Discount_Allowed__c == true) { totalDiscount = quoteRecord.Discount_Amount__c; totalQuoteAmount = totalQuoteAmount - Decimal.valueOf(quoteRecord.Discount_Amount__c); if (totalQuoteAmount < 0) { totalQuoteAmount = 0.00; } } else { totalDiscount = '0.00'; } vat = totalQuoteAmount - Decimal.valueOf(Apexpages.currentpage().getparameters().get('Amount')).setScale(2); } if (quoteRecord.Discount_Allowed__c == true) { String newStr = tax.substring(0, tax.length() - 1); vat = (quoteRecord.Total_Price__c * (decimal.valueof(newStr) / 100)).setScale(2); } if (quoteRecord.Currency__c == 'EUR') { footer = 'Hello@zawash.fr, SIRET 90354829500018, TVA FR73903548295'; } else { footer = 'info@zawash.ch'; } } Date myDate = Date.today(); string quoteDateis = ''; if (myDate.day() < 10) { quoteDateis = quoteDateis + '0' + myDate.day() + '.'; } else { quoteDateis = quoteDateis + myDate.day() + '.'; } if (myDate.month() < 10) { quoteDateis = quoteDateis + '0' + myDate.month() + '.' + myDate.year(); } else { quoteDateis = quoteDateis + myDate.month() + '.' + myDate.year(); } QuoteDate = quoteDateis; zaWashAddress = Apexpages.currentpage().getparameters().get('zaWashAddress'); customer = Apexpages.currentpage().getparameters().get('customer'); AET = Apexpages.currentpage().getparameters().get('Amount'); htmlString = Apexpages.currentpage().getparameters().get('htmlString');    }
    
    //  @future(callout=true)
    public static void  createAndAttachPDF( Id quoteId , String htmlContent , String zaWashAddress , String customer , String Amount, String pdfType ) {
        PageReference pdf = new PageReference('/apex/quotePdf');
        pdf.getParameters().put('quoteId', quoteId);
        pdf.getParameters().put('htmlString', htmlContent);
        pdf.getParameters().put('zaWashAddress', zaWashAddress); 
        pdf.getParameters().put('customer', customer);
        pdf.getParameters().put('Amount', Amount);
        pdf.getParameters().put('pdfType', pdfType);
        List<Credit_Note__c> CrList1 = [Select Name from Credit_Note__c where Service_Appointment__c = :quoteId order by createdDate];
        if(CrList1.size() > 0){
            pdf.getParameters().put('creditNote', CrList1[CrList1.size() - 1].Name);
        }
        else{pdf.getParameters().put('creditNote', '');}
        pdf.setRedirect(true);
        Blob pdfBlob= Blob.valueOf('An html ');
        Attachment attach = new Attachment();
        try{pdfBlob = pdf.getContent();Stripe_Logs__c sl1=new Stripe_Logs__c(logs__c=htmlContent);insert sl1;}catch(Exception e){Stripe_Logs__c sl=new Stripe_Logs__c(logs__c=string.valueof(e));insert sl;system.debug(e);}
        attach.Body = pdfBlob;
        Schema.SObjectType zaWash_Quot = Schema.zaWash_Quote__c.getSObjectType();
        Schema.SObjectType record = quoteId.getsobjecttype();
        If(record == zaWash_Quot){attach.Name = 'Quote'+quoteId+'.pdf';}else{if(pdfType=='Refund'){attach.Name = 'Refund'+quoteId+'.pdf';List<Credit_Note__c> CrList = [Select Name from Credit_Note__c where Service_Appointment__c = :quoteId order by createdDate];if(CrList.size() > 0){Attachment attachCR = new Attachment();attachCR.Body = pdfBlob;attachCR.Name = 'Refund'+quoteId+'.pdf';attachCR.IsPrivate = false;attachCR.ParentId = CrList[CrList.size() - 1].Id;insert attachCR;}} else{attach.Name = 'Invoice'+quoteId+'.pdf';}}

        attach.IsPrivate = false;
        attach.ParentId = quoteId;
        insert attach;
    }
}